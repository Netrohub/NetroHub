# Nginx Configuration for NXO Laravel Application
# Optimized for production with SSL and security headers

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name nxoland.com www.nxoland.com;
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    server_name nxoland.com www.nxoland.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/nxoland.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nxoland.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), autoplay=(self \"https://challenges.cloudflare.com\"), bluetooth=(), clipboard-read=(), clipboard-write=(), display-capture=(), encrypted-media=(), fullscreen=(self \"https://challenges.cloudflare.com\"), gamepad=(), hid=(), idle-detection=(), local-fonts=(), midi=(), picture-in-picture=(self), publickey-credentials-get=(), screen-wake-lock=(), serial=(), storage-access=(), sync-xhr=(), unload=(), web-share=(), xr-spatial-tracking=()" always;
    
    # Cross-Origin policies (relaxed for Turnstile compatibility)
    add_header Cross-Origin-Embedder-Policy "unsafe-none" always;
    add_header Cross-Origin-Opener-Policy "same-origin-allow-popups" always;
    add_header Cross-Origin-Resource-Policy "cross-origin" always;
    
    # Content Security Policy
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://challenges.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; frame-src https://challenges.cloudflare.com; connect-src 'self' https://challenges.cloudflare.com; object-src 'none'; base-uri 'self'; frame-ancestors 'self'; form-action 'self'; upgrade-insecure-requests;" always;
    
    # Document root
    root /var/www/netrohub/NetroHub/public;
    index index.php index.html;
    
    # Logging
    access_log /var/log/nginx/nxoland.com.access.log;
    error_log /var/log/nginx/nxoland.com.error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Hashed assets (Vite build files) - immutable cache
    location ~* ^/build/assets/.*\.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }
    
    # Static files - long-lived cache
    location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }
    
    # Non-hashed CSS/JS files - shorter cache
    location ~* \.(css|js)$ {
        expires 1d;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }
    
    # Security - deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(\.env|\.git|composer\.(json|lock)|package\.(json|lock)|yarn\.lock|\.htaccess) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to Filament assets from public pages (admin-only)
    location ~ ^/(css|js|fonts)/filament/ {
        # Only allow access from admin routes
        if ($request_uri !~ ^/admin) {
            return 403;
        }
        try_files $uri =404;
    }
    
    # PHP-FPM configuration
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Security
        fastcgi_hide_header X-Powered-By;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
    }
    
    # Rate limiting for login
    location /login {
        limit_req zone=login burst=3 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Rate limiting for API endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # General rate limiting
    location / {
        limit_req zone=general burst=50 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Let's Encrypt ACME challenge (for SSL renewal)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }
}
